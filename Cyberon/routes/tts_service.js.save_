const http = require('http');
var querystring = require('querystring');
var express = require('express');
var streamifier = require('streamifier');
const ffmpeg = require('fluent-ffmpeg');
var fs = require('fs');
var router = express.Router();

const toStream = require('buffer-to-stream')
//const Readable = require('stream').Readable;
//const s = new Readable();
//s._read = () => {}
//s.push('your text here');
//s.push(null);


router.post('/', function(req, res, next) {
	
	
	var post_data = querystring.stringify({
	  "text": req.query.text?req.query.text:"哥累了"
	})
	let options = require('url').parse("http://vois3.cyberon.com.tw/cloud_tts/gen_tts_content.php");
	options.method = 'POST';
	options.headers = {
		'Content-Type': 'application/x-www-form-urlencoded'
	};
	var file = fs.createWriteStream("temp.wav");
	var post_req = http.request(options, function(resp) {
		
		
		//resp.setEncoding('utf8');
		var data = [];
		resp.on('data', function(chunk) {
			data.push(chunk);
		}).on('end', function() {
			//var buffer = Buffer.concat(data);
			
			//res.send(result);
			//const wav_stream = toStream(Buffer.from(data, 'utf8'))
			
			
			const wav_stream = toStream(Buffer.concat(data));
			
			//Buffer.from(data, 'utf8')
			//resp.pipe(file);
			res.setHeader("Content-Type", "audio/mpeg4");
			
			//var Readable = require('stream').Readable;
			//var rs = Readable();
			//rs.pipe(res);
			//console.log("111");
			let now = new Date();
			let timeStr = now.getHours()+"_"+now.getMinutes()+"_"+now.getSeconds();
			//var outStream = fs.createWriteStream('public/audio/'+timeStr+'temp_5.mp4');
			console.log("222");
			var command =
			ffmpeg(wav_stream)
			//.outputOptions(['-movflags isml+frag_keyframe'])
			//.outputOptions(['-movflags isml'])
            		//.toFormat('mp4')
	            	//.withAudioCodec('copy')
			
			.withAudioCodec('libmp3lame')
			//.audioCodec('aac')
        		//.videoCodec('libx264')
			.format('mp3')
			//.toFormat('mp4')
			//.pipe(res,{end: true})
			.on('error', (err,stdout,stderr) => {
				//res.send("error occurred!!!");
				console.log(err);
				console.log(stdout);
				console.log(stderr);
				console.log('An error occurred: ' + err.message);
			})
			.on('progress', (progress) => {
				// console.log(JSON.stringify(progress));
				console.log('Processing: ' + progress.targetSize + ' KB converted');
			})
			.on('end', () => {
				console.log("333");
				
				//console.log('Processing finished !');
				//fs.readFile("temp.mp4", "utf8", function(err, data){
				//	if(err) throw err;
				//	var resultArray = data;//do operation on data that generates say resultArray;
				//	res.setHeader("Content-Type", "video/mp4");
				//	res.send(resultArray);
				//});
				//res.setHeader("Content-Type", "audio/mpeg4");
				//var readStream = fs.createReadStream('public/audio/temp.mp4');
				//readStream.pipe(res);
				//res.send("http://125.227.140.196:3000/audio/temp.mp4")
			})//.pipe(res);
			//.pipe();
			//.output('outputfile.mp4')
			//.output('outputfile.mp4')
			//.writeToStream(outStream, { end: true });
			//var ffstream = command.pipe();
			//ffstream.pipe(res);
			//.pipe(outStream, { end: true })
			//.stream(rs,{end:true});
			//.save('public/audio/temp_10.mp3');
			//res.send('123');
			.pipe(res,{end: true});
			console.log('hello?');
			//s.pipe(res);
		});
		
		
	});
	post_req.write(post_data);
	post_req.end();
	
});

module.exports = router;


/*
//console.log(res);
		//console.log(req);
		/*
		resp.setEncoding('utf8');
		var data = [];
		resp.on('data', function(chunk) {
			data.push(chunk);
		}).on('end', function() {
			var inStream = streamifier.createReadStream(data);
			ffmpeg(inStream)
			.toFormat('mp4')
			.on('error', (err) => {
				console.log(err);
				console.log('An error occurred: ' + err.message);
			})
			.on('progress', (progress) => {
				// console.log(JSON.stringify(progress));
				console.log('Processing: ' + progress.targetSize + ' KB converted');
			})
			.on('end', () => {
				console.log('Processing finished !');
			})
			.save('./output.mp4');
			//var buffer = Buffer.concat(data);
			//res.send(result);
			//fs.writeFile("./output.wav",new Buffer(data), function(err) {
			//    if(err) {
		    //      	return console.log(err);
    		//	    }
			//    res.send("The file was saved!");
			//});
		});
		*/
